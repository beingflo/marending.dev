---
import { Chart } from '../../../components';
import { Figure } from '../../../components/Figure';
import * as Plot from '@observablehq/plot';
import type { Match } from './_types';
import { getMatches } from './_util';

let matches: Array<Match> = getMatches();
const matchesPerPlayer: Record<string, number> = {};

matches.forEach((m) => {
	m.players.forEach((p) => {
		if (matchesPerPlayer[p]) {
			matchesPerPlayer[p] += 1;
		} else {
			matchesPerPlayer[p] = 1;
		}
	});
});

const data = Object.entries(matchesPerPlayer).map(([p, n]) => ({ player: p, matches: n }));
data.sort((a, b) => b.matches - a.matches);
---

<Figure caption="Figure 6. Number of matches played by player. Limited to the top 100 players">
	<Chart
		options={{
			x: { grid: true, tickSize: 0, tickFormat: (d) => '', label: 'players', type: 'band' },
			y: { grid: true },
			marks: [
				Plot.dotY(data.slice(0, 100), {
					x: 'player',
					y: 'matches',
					fill: (d) => (d.player === '251' ? 'red' : 'black'),
					sort: { x: 'y', reverse: true },
				}),
				Plot.text(data.slice(0, 100), {
					x: 'player',
					y: 'matches',
					text: (d) => '← this is me',
					filter: (d) => d.player === '251',
					rotate: -90,
					dy: -40,
					dx: 3.5,
					lineAnchor: 'bottom',
				}),
			],
		}}
	/>
</Figure>
