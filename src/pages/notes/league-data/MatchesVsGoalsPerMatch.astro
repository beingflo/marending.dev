---
import { Chart } from '../../../components';
import { Figure } from '../../../components/Figure';
import * as Plot from '@observablehq/plot';
import type { Match } from './_types';
import { getMatches } from './_util';

let matches: Array<Match> = getMatches();
const players: Record<string, [number, number]> = {};

matches.forEach((m) => {
	m.goals?.scorer.forEach((p) => {
		if (players[p]) {
			players[p][0] += 1;
		} else {
			players[p] = [1, 0];
		}
	});
});

matches.forEach((m) => {
	m.players.forEach((p) => {
		if (players[p]) {
			players[p][1] += 1;
		} else {
			players[p] = [0, 1];
		}
	});
});

const data = Object.entries(players).map(([player, [goals, matches]]) => ({
	player,
	goals,
	matches,
}));
---

<Figure
	caption="Figure 9. Matches versus goals per match for players who scored at least 100 goals">
	<Chart
		options={{
			x: { grid: true },
			y: { grid: true, label: '↑ goals / match' },
			marginLeft: 50,
			marks: [
				Plot.dot(
					data.filter((d) => d.goals > 100),
					{
						x: 'matches',
						y: (d) => d.goals / d.matches,
						stroke: (d) => (d.player === '251' ? 'red' : 'black'),
					}
				),
				Plot.text(
					data.filter((d) => d.goals > 100),
					{
						x: 'matches',
						y: (d) => d.goals / d.matches,
						text: (d) => '← me',
						filter: (d) => d.player === '251',
						dy: 3.5,
						dx: 20,
						lineAnchor: 'bottom',
					}
				),
			],
		}}
	/>
</Figure>
